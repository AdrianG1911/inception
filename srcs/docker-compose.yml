services:
  nginx:
    build:
      context: ./requirements/nginx
    image: nginx
    container_name: nginx-c
    ports:
      - "443:443"
    volumes:
      - wordpress-data:/var/www/html
    env_file:
      - ./.env
    depends_on:
      - wordpress
    restart: always
    networks:
      - docker-network

  wordpress:
    build:
      context: ./requirements/wordpress
    image: wordpress
    container_name: wordpress-c
    volumes:
      - wordpress-data:/var/www/html
    env_file:
      - ./.env
    environment:
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WP_ADMIN_USER: ${WP_ADMIN_USER}
      WP_ADMIN_PASS: ${WP_ADMIN_PASS}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      DOMAIN_NAME: ${DOMAIN_NAME}
    depends_on:
      - mariadb
    restart: always
    networks:
      - docker-network

  mariadb:
    build:
      context: ./requirements/mariadb
    image: mariadb
    container_name: mariadb-c
    volumes:
      - mariadb-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    restart: always
    networks:
      - docker-network

# Define the named volumes at the top level
volumes:
  wordpress-data:
    name: WordPress
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/adrgutie/data/wordpress' 
  mariadb-data:
    name: DB
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/adrgutie/data/mariadb'

networks:
  docker-network:
    name: docker-network
    driver: bridge